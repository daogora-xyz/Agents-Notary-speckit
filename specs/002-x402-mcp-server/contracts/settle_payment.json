{
  "name": "settle_payment",
  "description": "Submit verified EIP-3009 payment authorization to x402 facilitator for on-chain settlement. Implements idempotency via nonce-based caching (10-minute TTL) to prevent duplicate submissions.",
  "inputSchema": {
    "type": "object",
    "properties": {
      "authorization": {
        "type": "object",
        "description": "EIP-3009 authorization (must be pre-verified via verify_payment)",
        "properties": {
          "from": {
            "type": "string",
            "description": "Payer Ethereum address (0x-prefixed)",
            "pattern": "^0x[a-fA-F0-9]{40}$"
          },
          "to": {
            "type": "string",
            "description": "Payee Ethereum address (0x-prefixed)",
            "pattern": "^0x[a-fA-F0-9]{40}$"
          },
          "value": {
            "type": "string",
            "description": "Payment amount in USDC atomic units",
            "pattern": "^[1-9][0-9]*$"
          },
          "validAfter": {
            "type": "integer",
            "description": "Unix timestamp - authorization valid after",
            "minimum": 0
          },
          "validBefore": {
            "type": "integer",
            "description": "Unix timestamp - authorization expires after",
            "minimum": 0
          },
          "nonce": {
            "type": "string",
            "description": "32-byte nonce (hex string with 0x prefix)",
            "pattern": "^0x[a-fA-F0-9]{64}$"
          },
          "v": {
            "type": "integer",
            "description": "ECDSA signature v parameter",
            "enum": [27, 28]
          },
          "r": {
            "type": "string",
            "description": "ECDSA signature r component (32-byte hex)",
            "pattern": "^0x[a-fA-F0-9]{64}$"
          },
          "s": {
            "type": "string",
            "description": "ECDSA signature s component (32-byte hex)",
            "pattern": "^0x[a-fA-F0-9]{64}$"
          }
        },
        "required": ["from", "to", "value", "validAfter", "validBefore", "nonce", "v", "r", "s"]
      },
      "payment_requirement": {
        "type": "object",
        "description": "x402 payment requirement from create_payment_requirement",
        "properties": {
          "x402_version": {
            "type": "integer",
            "description": "x402 protocol version",
            "const": 1
          },
          "scheme": {
            "type": "string",
            "description": "Payment scheme",
            "const": "exact"
          },
          "network": {
            "type": "string",
            "description": "Blockchain network",
            "enum": ["base", "base-sepolia", "arbitrum"]
          },
          "maxAmountRequired": {
            "type": "string",
            "description": "Maximum payment amount in atomic units",
            "pattern": "^[1-9][0-9]*$"
          },
          "payee": {
            "type": "string",
            "description": "Payee address (0x-prefixed)",
            "pattern": "^0x[a-fA-F0-9]{40}$"
          },
          "valid_until": {
            "type": "string",
            "description": "ISO8601 timestamp - payment expires after",
            "format": "date-time"
          },
          "nonce": {
            "type": "string",
            "description": "Blockchain-sourced nonce (hex string)",
            "pattern": "^0x[a-fA-F0-9]+$"
          },
          "asset": {
            "type": "string",
            "description": "USDC contract address",
            "pattern": "^0x[a-fA-F0-9]{40}$"
          }
        },
        "required": ["x402_version", "scheme", "network", "maxAmountRequired", "payee", "valid_until", "nonce", "asset"]
      }
    },
    "required": ["authorization", "payment_requirement"]
  },
  "outputSchema": {
    "type": "object",
    "properties": {
      "status": {
        "type": "string",
        "description": "Settlement status",
        "enum": ["settled", "pending", "failed"]
      },
      "tx_hash": {
        "type": "string",
        "description": "Blockchain transaction hash (if status=settled)",
        "pattern": "^0x[a-fA-F0-9]{64}$"
      },
      "block_number": {
        "type": "integer",
        "description": "Block number containing transaction (if status=settled)",
        "minimum": 0
      },
      "error": {
        "type": "string",
        "description": "Error message if status=failed (insufficient balance, facilitator error, etc.)"
      },
      "retry_after": {
        "type": "integer",
        "description": "Seconds to wait before retrying (if status=pending)",
        "minimum": 0
      }
    },
    "required": ["status"]
  }
}
